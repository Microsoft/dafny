// Dafny 3.9.0.41003
// Command Line Options: /countVerificationErrors:0 /useBaseNameForFileName /vcsCores:2 /compileVerbose:0 /timeLimit:300 /noVerify /compile:4 /Main:Opaque.Instance /Users/remywillems/SourceCode/dafny/Test/git-issues/git-issue-MainE.dfy
// git-issue-MainE.dfy

class A {
  method Test(i: int)
    decreases i
  {
    print "Bad\n";
  }
}

class B {
  method Test<T>()
  {
    print "Bad\n";
  }
}

class C<T> {
  method Test()
  {
    print "OK-C\n";
  }
}

class D {
  constructor ()
  {
  }

  method Test()
  {
    print "Bad\n";
  }
}

class E {
  constructor ()
  {
  }

  static method Test()
  {
    print "OK-E\n";
  }
}

class G {
  method Test(ghost i: int)
    decreases i
  {
    print "OK-G\n";
  }
}

class H {
  method Test() returns (i: int)
  {
    print "Bad\n";
  }
}

class I {
  method Test() returns (ghost i: int)
  {
    print "OK-I\n";
  }
}

class J {
  method Test()
    requires true
  {
    print "Bad\n";
  }
}

class K {
  method Test()
    modifies {}
  {
    print "Bad\n";
  }
}

class Z {
  method Main()
  {
    print "Main\n";
  }
}

trait Tr {
  static method Static()
  {
    print "OK-Tr\n";
  }

  method Instance()
  {
    print "Bad\n";
  }
}

datatype Dt = Dt0(int) | Dt1(real) {
  static method Static()
  {
    print "OK-Dt: static\n";
  }

  method Instance()
    decreases this
  {
    print "OK-Dt: ", this, "\n";
  }
}

codatatype Co = CoMore(Co) {
  static method Static()
  {
    print "OK-Co: static\n";
  }

  method Instance()
  {
    print "OK-Co: ", this, "\n";
  }
}

newtype Nt = x: int
  | -2147483648 <= x <= 2147483648
{
  static method Static()
  {
    print "OK-Nt: static\n";
  }

  method Instance()
    decreases this
  {
    print "OK-Nt: ", this, "\n";
  }
}

type {:extern "OpaqueX"} Opaque(!new) {
  static method Static()
  {
    print "Bad\n";
  }

  method Instance()
  {
    print "Bad\n";
  }
}
