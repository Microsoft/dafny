name: Publish Draft Release

on:
  workflow_call:
    inputs:
      sha:
        required: true
        type: string
      version:
        required: true
        type: string
      draft:
        required: true
        type: boolean
      release_notes:
        required: true
        type: string

env:
  dotnet-version: 6.0.x # SDK Version for building Dafny
  
jobs:
  check-deep-tests:
    uses: ./.github/workflows/check-deep-tests-reusable.yml
    with:
      sha: ${{ inputs.sha }}

  publish-release:
    runs-on: macos-latest
    steps:
    - name: Checkout Dafny
      uses: actions/checkout@v2
      with:
        path: dafny
        ref: ${{ inputs.sha }}
    - uses: actions/setup-python@v1
    - name: Ensure tag exists
      run: |
        - git tag ${{ inputs.tag_name }} -f
        - git push origin ${{ inputs.tag_name }} -f
      with:
        working-directory: dafny
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1.9.0
      with:
        dotnet-version: ${{env.dotnet-version}}
    - name: C++ for ubuntu 18.04
      if: matrix.os == 'ubuntu-18.04'
      run: |
        sudo apt-get install -y build-essential
    - name: Choose the right C++ for ubuntu 18.04
      if: matrix.os == 'ubuntu-18.04'
      run: |
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 60
    - uses: actions/setup-python@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - uses: actions/setup-node@v1
    - run: npm install bignumber.js
    - name: Install latex pandoc
      run: |
        brew install pandoc
        brew install --cask basictex
        eval "$(/usr/libexec/path_helper)"
        sudo tlmgr update --self
        sudo tlmgr install framed tcolorbox environ trimspaces unicode-math
        pandoc -v
        which latex || echo NOT FOUND latex
        which xelatex || echo NOT FOUND xelatex
        sudo gem install rouge
    # First we build the ZIPs (which do not include the refman)
    - name: Package release files
      run: |
        python dafny/Scripts/package.py ${{ inputs.version }} --skip_manual=true --github_secret=${{ secrets.GITHUB_TOKEN }}
    # Then we build the reference manual separately, because that depends on evaluating the path_helper script,
    # and that perturbs the path enough that `python` above would resolve to an older built-in Python version.
    # Additionally, since the refman build scripts expect to find Dafny in its usual Binaries/ folder (not in
    # a platform-specific directory), we build Dafny once here.
    - name: Build Dafny
      run: dotnet build dafny/Source/Dafny.sln
    - name: Build reference manual
      run: |
        eval "$(/usr/libexec/path_helper)"
        make -C dafny/docs/DafnyRef

    - name: Create GitHub release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ inputs.name }}
        tag_name: ${{ inputs.tag_name }}
        body: ${{ inputs.release_notes }}
        draft: ${{ inputs.draft }}
        prerelease: ${{ inputs.prerelease }}
        files: |
          dafny/Package/dafny-${{ inputs.version }}*
          dafny/docs/DafnyRef/DafnyRef.pdf
        fail_on_unmatched_files: true
