name: Test Release Downloads

on:
  release:
    types: [ published ]
  # For manual testing through the Actions UI
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # This workflow breaks on windows-2022: https://github.com/dafny-lang/dafny/issues/1906
        os: [ ubuntu-latest, ubuntu-20.04, macos-latest, windows-2019 ]
        include:
        - os:  'ubuntu-22.04'
          osn: 'ubuntu\-22.04'
        - os:  'ubuntu-20.04'
          osn: 'ubuntu\-20.04'
        - os:  'macos-11'
          osn: 'x64-osx-.*'
        - os:  'windows-2019'
          osn: 'win'
    # There is no hosted environment for Ubuntu 14.04 or for debian

    # Java is installed by default, but we need to select 18

    steps:
    - name: OS
      run: echo ${{ runner.os }} ${{ matrix.os }}
    - name: Set up JDK 18
      uses: actions/setup-java@v3
      with:
        java-version: 18
        distribution: corretto
    - name: Download ${{matrix.os}} releases
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: dafny-lang/dafny
        file: "dafny-.*-${{ matrix.osn }}\\.zip"
        regex: true
        target: "./"
    - run: ls
    - if: runner.os != 'Windows'
      run: |
        unzip dafny*.zip && rm dafny*.zip
    - if: runner.os == 'Windows'
      shell: pwsh
      run: |
        Expand-Archive dafny*.zip
        mv dafny*/dafny dafny

    ## Create a simple smoke test program
    - name: Make test program
      run: |
        echo "method Main() { assert true; print 42, '\n'; }" > a.dfy
        echo "method m() { assert false; }" > b.dfy
        echo "42" > expect.txt
    ## Check that dafny and z3 run and that a simple program verifies or fails
    - name: Versions
      run: |
        dafny/z3/bin/z3-4.8.5 -version
        dafny/z3/bin/z3-4.12.1 -version
        dafny/dafny -version
    - name: Check
      run: dafny/dafny verify a.dfy
    - name: Check bad - non Windows
      if: runner.os != 'Windows'
      run: dafny/dafny verify b.dfy || echo "EXPECTED FAILURE"
    - name: Check bad - Windows
      if: runner.os == 'Windows'
      run: (dafny/Dafny.exe verify b.dfy || echo "EXPECTED FAILURE") ; exit 0
    ## Check that a simple program compiles and runs on each supported platform
    - name: Check C# compile
      run: |
        dafny/dafny run -t:cs a.dfy > actual.txt
        diff expect.txt actual.txt
        dafny/dafny build -t:cs a.dfy
        dotnet a.dll > actual.txt
        diff expect.txt actual.txt
    - name: Check Go compile
      run: |
        dafny/dafny run -t:go a.dfy > actual.txt
        diff expect.txt actual.txt
    - name: Running Go artifacts
      if: runner.os != 'Windows'
      run: |
        dafny/dafny build -t:go a.dfy
        GO111MODULE=auto GOPATH=$PWD/a-go go run a-go/src/a.go > actual.txt
        diff expect.txt actual.txt
    - name: Running Go artifacts - Windows
      shell: pwsh
      if: runner.os == 'Windows'
      run: |
        dafny/dafny build -t:go a.dfy
        $Env:GO111MODULE="auto"
        $Env:GOPATH="$PWD/a-go"
        go run a-go/src/a.go > actual.txt
        diff expect.txt actual.txt
    - name: Check Javascript compile
      run: |
        dafny/dafny run -t:js a.dfy > actual.txt
        diff expect.txt actual.txt
        dafny/dafny build -t:js a.dfy
        node a.js dafny/DafnyRuntime.js > actual.txt
        diff expect.txt actual.txt
    - name: Check Java compile
      run: |
        (ls dafny/DafnyRuntime.jar || echo NO DafnyRuntime.jar )
        dafny/dafny run -t:java a.dfy > actual.txt
        diff expect.txt actual.txt
        dafny/dafny build -t:java a.dfy
        java -jar a.jar > actual.txt
        diff expect.txt actual.txt
    - name: Check Python compile
      run: |
        dafny/dafny run -t:py a.dfy > actual.txt
        diff expect.txt actual.txt
        dafny/dafny build -t:py a.dfy
        python a.py > actual.txt
        diff expect.txt actual.txt
    ## quicktests.sh is a script for users to use to check that their
    ## installation is OK. We run it here to be sure it works, even if
    ## it duplicates some of the above.
    - name: run quicktests
      run: |
        npm install bignumber.js
        dafny/quicktest.sh > log.txt
        diff log.txt dafny/quicktest.out
