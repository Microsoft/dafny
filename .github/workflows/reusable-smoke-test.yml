name: Smoke tests of release (reusable)

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
jobs:
  smoke-test:
    runs-on: ${{ inputs.os }}
    continue-on-error: true
    steps:
    - name: Versions
      run: |
        pwd
        which dafny
        dafny --version
        # -version is not supported in old dafny,
        # but this gives the version with an error
        dotnet --list-sdks
        go version
        node --version
        java -version
    - name: Make test program
      run: |
        echo "method Main() { assert true; print 42, '\n'; }" > a.dfy
        echo "method m() { assert false; }" > b.dfy
        echo "42" > expect.txt

    ## Check that dafny and z3 run and that a simple program verifies or fails
    - name: Check
      run: dafny/dafny verify a.dfy
    - name: Check bad - non Windows
      if: runner.os != 'Windows'
      run: dafny/dafny verify b.dfy || echo "EXPECTED FAILURE"
    - name: Check bad - Windows
      if: runner.os == 'Windows'
      run: (dafny/Dafny.exe verify b.dfy || echo "EXPECTED FAILURE") ; exit 0
    ## Check that a simple program compiles and runs on each supported platform
    - name: Check C# compile
      run: |
        dafny/dafny run -t:cs a.dfy > actual.txt
        diff expect.txt actual.txt
        dafny/dafny build -t:cs a.dfy
        dotnet a.dll > actual.txt
        diff expect.txt actual.txt
    - name: Check Go compile
      run: |
        dafny/dafny run -t:go a.dfy > actual.txt
        diff expect.txt actual.txt
    - name: Running Go artifacts
      if: runner.os != 'Windows'
      run: |
        dafny/dafny build -t:go a.dfy
        GO111MODULE=auto GOPATH=$PWD/a-go go run a-go/src/a.go > actual.txt
        diff expect.txt actual.txt
    - name: Running Go artifacts - Windows
      shell: pwsh
      if: runner.os == 'Windows'
      run: |
        dafny/dafny build -t:go a.dfy
        $Env:GO111MODULE="auto"
        $Env:GOPATH="$PWD/a-go"
        go run a-go/src/a.go > actual.txt
        diff expect.txt actual.txt
    - name: Check Javascript compile
      run: |
        dafny/dafny run -t:js a.dfy > actual.txt
        diff expect.txt actual.txt
        dafny/dafny build -t:js a.dfy
        node a.js dafny/DafnyRuntime.js > actual.txt
        diff expect.txt actual.txt
    - name: Check Java compile
      run: |
        (ls dafny/DafnyRuntime.jar || echo NO DafnyRuntime.jar )
        dafny/dafny run -t:java a.dfy > actual.txt
        diff expect.txt actual.txt
        dafny/dafny build -t:java a.dfy
        java -jar a.jar > actual.txt
        diff expect.txt actual.txt
    - name: Check Python compile
      run: |
        dafny/dafny run -t:py a.dfy > actual.txt
        diff expect.txt actual.txt
        dafny/dafny build -t:py a.dfy
        python a.py > actual.txt
