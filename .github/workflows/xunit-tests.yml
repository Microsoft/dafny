name: Run XUnit tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{matrix.os}}
    name: ${{matrix.suffix}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-18.04
            suffix: ubuntu-18.04
            z3: z3-4.8.5-x64-ubuntu-16.04
            chmod: true
            coverage: true
          - os: windows-2019
            suffix: win
            z3: z3-4.8.5-x64-win
            chmod: false
            coverage: false
          - os: macos-10.15
            suffix: osx-10.14.1
            z3: z3-4.8.5-x64-osx-10.14.2
            chmod: true
            coverage: false
    env:
      solutionPath: Source/Dafny.sln
      z3BaseUri: https://github.com/Z3Prover/z3/releases/download/Z3-4.8.5
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Setup .NET 5.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Install dependencies
      run: dotnet restore ${{env.solutionPath}}
    - name: Load Z3
      shell: pwsh
      run: |
        Invoke-WebRequest ${{env.z3BaseUri}}/${{matrix.z3}}.zip -OutFile z3.zip
        Expand-Archive z3.zip .
        Remove-Item z3.zip
        Copy-Item ${{matrix.z3}} Binaries/z3 -Recurse
    - name: Set Z3 Permissions
      if: ${{matrix.chmod}}
      run: |
        chmod +x Binaries/z3/bin/z3
    - name: Build
      run: dotnet build --no-restore ${{env.solutionPath}}
    - name: Run DafnyLanguageServer Tests
      run: dotnet test --no-restore --verbosity normal --logger trx Source/DafnyLanguageServer.Test
    - name: Run DafnyPipeline Tests
      run: dotnet test --no-restore --verbosity normal --logger trx Source/DafnyPipeline.Test
    - name: Run DafnyTestGeneration Tests
      run: dotnet test --no-restore --verbosity normal --logger trx Source/DafnyTestGeneration.Test
    - uses: actions/upload-artifact@v2
      with:
        name: unit-test-results-${{ matrix.os }}
        path: |
          Source/DafnyLanguageServer.Test/TestResults/*.xml
          Source/DafnyPipeline.Test/TestResults/*.xml
          Source/DafnyTestGeneration.Test/TestResults/*.xml


  publish-test-results:
    name: "Download and Publish Unit Tests Results"
    needs: build
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Publish Unit Tests Results
        uses: dorny/test-reporter@v1
        with:
          name: Unit Test Results
          path: 'artifacts/**/*.trx'
          reporter: dotnet-trx
  